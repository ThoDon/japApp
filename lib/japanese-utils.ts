import { SyllabaryRecord, SyllabarySubset, SyllabaryType } from "./types";

export const hiragana: SyllabaryRecord = {
  gojuon: [
    { char: "あ", romaji: "a" },
    { char: "い", romaji: "i" },
    { char: "う", romaji: "u" },
    { char: "え", romaji: "e" },
    { char: "お", romaji: "o" },
    { char: "か", romaji: "ka" },
    { char: "き", romaji: "ki" },
    { char: "く", romaji: "ku" },
    { char: "け", romaji: "ke" },
    { char: "こ", romaji: "ko" },
    { char: "さ", romaji: "sa" },
    { char: "し", romaji: "shi" },
    { char: "す", romaji: "su" },
    { char: "せ", romaji: "se" },
    { char: "そ", romaji: "so" },
    { char: "た", romaji: "ta" },
    { char: "ち", romaji: "chi" },
    { char: "つ", romaji: "tsu" },
    { char: "て", romaji: "te" },
    { char: "と", romaji: "to" },
    { char: "な", romaji: "na" },
    { char: "に", romaji: "ni" },
    { char: "ぬ", romaji: "nu" },
    { char: "ね", romaji: "ne" },
    { char: "の", romaji: "no" },
    { char: "は", romaji: "ha" },
    { char: "ひ", romaji: "hi" },
    { char: "ふ", romaji: "fu" },
    { char: "へ", romaji: "he" },
    { char: "ほ", romaji: "ho" },
    { char: "ま", romaji: "ma" },
    { char: "み", romaji: "mi" },
    { char: "む", romaji: "mu" },
    { char: "め", romaji: "me" },
    { char: "も", romaji: "mo" },
    { char: "や", romaji: "ya" },
    { char: "ゆ", romaji: "yu" },
    { char: "よ", romaji: "yo" },
    { char: "ら", romaji: "ra" },
    { char: "り", romaji: "ri" },
    { char: "る", romaji: "ru" },
    { char: "れ", romaji: "re" },
    { char: "ろ", romaji: "ro" },
    { char: "わ", romaji: "wa" },
    { char: "を", romaji: "wo" },
    { char: "ん", romaji: "n" },
  ],
  dakuten: [
    { char: "が", romaji: "ga" },
    { char: "ぎ", romaji: "gi" },
    { char: "ぐ", romaji: "gu" },
    { char: "げ", romaji: "ge" },
    { char: "ご", romaji: "go" },
    { char: "ざ", romaji: "za" },
    { char: "じ", romaji: "ji" },
    { char: "ず", romaji: "zu" },
    { char: "ぜ", romaji: "ze" },
    { char: "ぞ", romaji: "zo" },
    { char: "だ", romaji: "da" },
    { char: "ぢ", romaji: "ji" },
    { char: "づ", romaji: "zu" },
    { char: "で", romaji: "de" },
    { char: "ど", romaji: "do" },
    { char: "ば", romaji: "ba" },
    { char: "び", romaji: "bi" },
    { char: "ぶ", romaji: "bu" },
    { char: "べ", romaji: "be" },
    { char: "ぼ", romaji: "bo" },
  ],
  handakuten: [
    { char: "ぱ", romaji: "pa" },
    { char: "ぴ", romaji: "pi" },
    { char: "ぷ", romaji: "pu" },
    { char: "ぺ", romaji: "pe" },
    { char: "ぽ", romaji: "po" },
  ],
  yoon: [
    { char: "きゃ", romaji: "kya" },
    { char: "きゅ", romaji: "kyu" },
    { char: "きょ", romaji: "kyo" },
    { char: "しゃ", romaji: "sha" },
    { char: "しゅ", romaji: "shu" },
    { char: "しょ", romaji: "sho" },
    { char: "ちゃ", romaji: "cha" },
    { char: "ちゅ", romaji: "chu" },
    { char: "ちょ", romaji: "cho" },
    { char: "にゃ", romaji: "nya" },
    { char: "にゅ", romaji: "nyu" },
    { char: "にょ", romaji: "nyo" },
    { char: "ひゃ", romaji: "hya" },
    { char: "ひゅ", romaji: "hyu" },
    { char: "ひょ", romaji: "hyo" },
    { char: "みゃ", romaji: "mya" },
    { char: "みゅ", romaji: "myu" },
    { char: "みょ", romaji: "myo" },
    { char: "りゃ", romaji: "rya" },
    { char: "りゅ", romaji: "ryu" },
    { char: "りょ", romaji: "ryo" },
    { char: "ぎゃ", romaji: "gya" },
    { char: "ぎゅ", romaji: "gyu" },
    { char: "ぎょ", romaji: "gyo" },
    { char: "じゃ", romaji: "ja" },
    { char: "じゅ", romaji: "ju" },
    { char: "じょ", romaji: "jo" },
    { char: "びゃ", romaji: "bya" },
    { char: "びゅ", romaji: "byu" },
    { char: "びょ", romaji: "byo" },
    { char: "ぴゃ", romaji: "pya" },
    { char: "ぴゅ", romaji: "pyu" },
    { char: "ぴょ", romaji: "pyo" },
  ],
};
export const katakana: SyllabaryRecord = {
  gojuon: [
    { char: "ア", romaji: "a" },
    { char: "イ", romaji: "i" },
    { char: "ウ", romaji: "u" },
    { char: "エ", romaji: "e" },
    { char: "オ", romaji: "o" },
    { char: "カ", romaji: "ka" },
    { char: "キ", romaji: "ki" },
    { char: "ク", romaji: "ku" },
    { char: "ケ", romaji: "ke" },
    { char: "コ", romaji: "ko" },
    { char: "サ", romaji: "sa" },
    { char: "シ", romaji: "shi" },
    { char: "ス", romaji: "su" },
    { char: "セ", romaji: "se" },
    { char: "ソ", romaji: "so" },
    { char: "タ", romaji: "ta" },
    { char: "チ", romaji: "chi" },
    { char: "ツ", romaji: "tsu" },
    { char: "テ", romaji: "te" },
    { char: "ト", romaji: "to" },
    { char: "ナ", romaji: "na" },
    { char: "ニ", romaji: "ni" },
    { char: "ヌ", romaji: "nu" },
    { char: "ネ", romaji: "ne" },
    { char: "ノ", romaji: "no" },
    { char: "ハ", romaji: "ha" },
    { char: "ヒ", romaji: "hi" },
    { char: "フ", romaji: "fu" },
    { char: "ヘ", romaji: "he" },
    { char: "ホ", romaji: "ho" },
    { char: "マ", romaji: "ma" },
    { char: "ミ", romaji: "mi" },
    { char: "ム", romaji: "mu" },
    { char: "メ", romaji: "me" },
    { char: "モ", romaji: "mo" },
    { char: "ヤ", romaji: "ya" },
    { char: "ユ", romaji: "yu" },
    { char: "ヨ", romaji: "yo" },
    { char: "ラ", romaji: "ra" },
    { char: "リ", romaji: "ri" },
    { char: "ル", romaji: "ru" },
    { char: "レ", romaji: "re" },
    { char: "ロ", romaji: "ro" },
    { char: "ワ", romaji: "wa" },
    { char: "ヲ", romaji: "wo" },
    { char: "ン", romaji: "n" },
  ],
  dakuten: [
    { char: "ガ", romaji: "ga" },
    { char: "ギ", romaji: "gi" },
    { char: "グ", romaji: "gu" },
    { char: "ゲ", romaji: "ge" },
    { char: "ゴ", romaji: "go" },
    { char: "ザ", romaji: "za" },
    { char: "ジ", romaji: "ji" },
    { char: "ズ", romaji: "zu" },
    { char: "ゼ", romaji: "ze" },
    { char: "ゾ", romaji: "zo" },
    { char: "ダ", romaji: "da" },
    { char: "ヂ", romaji: "ji" },
    { char: "ヅ", romaji: "zu" },
    { char: "デ", romaji: "de" },
    { char: "ド", romaji: "do" },
    { char: "バ", romaji: "ba" },
    { char: "ビ", romaji: "bi" },
    { char: "ブ", romaji: "bu" },
    { char: "ベ", romaji: "be" },
    { char: "ボ", romaji: "bo" },
  ],
  handakuten: [
    { char: "パ", romaji: "pa" },
    { char: "ピ", romaji: "pi" },
    { char: "プ", romaji: "pu" },
    { char: "ペ", romaji: "pe" },
    { char: "ポ", romaji: "po" },
  ],
  yoon: [
    { char: "キャ", romaji: "kya" },
    { char: "キュ", romaji: "kyu" },
    { char: "キョ", romaji: "kyo" },
    { char: "シャ", romaji: "sha" },
    { char: "シュ", romaji: "shu" },
    { char: "ショ", romaji: "sho" },
    { char: "チャ", romaji: "cha" },
    { char: "チュ", romaji: "chu" },
    { char: "チョ", romaji: "cho" },
    { char: "ニャ", romaji: "nya" },
    { char: "ニュ", romaji: "nyu" },
    { char: "ニョ", romaji: "nyo" },
    { char: "ヒャ", romaji: "hya" },
    { char: "ヒュ", romaji: "hyu" },
    { char: "ヒョ", romaji: "hyo" },
    { char: "ミャ", romaji: "mya" },
    { char: "ミュ", romaji: "myu" },
    { char: "ミョ", romaji: "myo" },
    { char: "リャ", romaji: "rya" },
    { char: "リュ", romaji: "ryu" },
    { char: "リョ", romaji: "ryo" },
    { char: "ギャ", romaji: "gya" },
    { char: "ギュ", romaji: "gyu" },
    { char: "ギョ", romaji: "gyo" },
    { char: "ジャ", romaji: "ja" },
    { char: "ジュ", romaji: "ju" },
    { char: "ジョ", romaji: "jo" },
    { char: "ビャ", romaji: "bya" },
    { char: "ビュ", romaji: "byu" },
    { char: "ビョ", romaji: "byo" },
    { char: "ピャ", romaji: "pya" },
    { char: "ピュ", romaji: "pyu" },
    { char: "ピョ", romaji: "pyo" },
  ],
};

// Placeholder for kanji (will be implemented later)
const kanji: SyllabaryRecord = {
  gojuon: [
    { char: "漢", romaji: "kan" },
    { char: "字", romaji: "ji" },
    { char: "テスト", romaji: "tesuto" },
  ],
  dakuten: [],
  handakuten: [],
  yoon: [],
};

// Function to shuffle an array (Fisher-Yates algorithm)
function shuffleArray<T>(array: T[]): T[] {
  const newArray = [...array];
  for (let i = newArray.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];
  }
  return newArray;
}

// Function to generate a grid of random characters
export function generateGrid(
  type: SyllabaryType,
  count: number,
  subsets: SyllabarySubset[]
): { char: string; romaji: string }[] {
  const allSubsets: Record<SyllabaryType, SyllabaryRecord> = {
    hiragana,
    katakana,
    kanji,
  };

  const characterSet = subsets.flatMap((subset) => allSubsets[type][subset]);

  // For large counts, we need to repeat characters
  const repeats = Math.ceil(count / characterSet.length);
  let allChars: { char: string; romaji: string }[] = [];

  for (let i = 0; i < repeats; i++) {
    allChars = [...allChars, ...shuffleArray(characterSet)];
  }

  // Take exactly the number of characters needed
  return allChars.slice(0, count);
}
